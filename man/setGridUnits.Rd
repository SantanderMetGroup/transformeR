% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/helpers.R
\name{setGridUnits}
\alias{setGridUnits}
\title{Set grid units}
\usage{
setGridUnits(grid, unit.string, var = NULL)
}
\arguments{
\item{grid}{An input grid}

\item{unit.string}{Character string: a udunits-parseable character string vector.
See details.}

\item{var}{In case of multigrids, the names of the variables whose units attribute is
to be updated (see examples).}
}
\value{
Retunrs (invisible) the same input grid with the new \code{"units"} 
attribute in \code{"$Variable"} list element.
}
\description{
Set the \code{"units"} attribute of a grid
}
\details{
The length of the \code{unit.string} vector should match the number of variables
 within the grid (in case of \code{multiGrids}), i.e., that of 
 getVarNames(grid) or the length of \code{var}, in case the latter is used.
}
\examples{
data(NCEP_Iberia_hus850)
getGridUnits(NCEP_Iberia_hus850)
data(NCEP_Iberia_psl)
getGridUnits(NCEP_Iberia_psl)
mf <- makeMultiGrid(NCEP_Iberia_hus850, NCEP_Iberia_psl, NCEP_Iberia_ta850)
getGridUnits(mf)
mf2 <- setGridUnits(mf, unit.string = c("1", "Pa", "Kelvin"))
getGridUnits(mf2)
# Arbitrary subsets of variables within the multigrid can be updated:
getVarNames(mf)
mf3 <- setGridUnits(mf, unit.string = c("1", "Pa"), var = c("hus@850", "psl"))
getGridUnits(mf3)
}
\seealso{
Other get.helpers unit.helpers: \code{\link{getGridUnits}}
}
\author{
J Bedia
}
