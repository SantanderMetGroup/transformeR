% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotClimatology.R
\name{map.lines}
\alias{map.lines}
\title{Add lines and polygons to climatological maps}
\usage{
map.lines(lonLim = NULL, latLim = NULL, coords = NULL, ...)
}
\arguments{
\item{lonLim}{A numeric vector of length 2, with minimum and maximum longitude coordinates (in grid units),
of the rectangle to be drawn.}

\item{latLim}{Same as \code{lonLim}, but for the selection of the latitudinal range.}

\item{coords}{Optional. 2-column numeric matrix with vertex coordinates (1 point by row). 
Note that row order matters in order to define the drawing direction.
 Also bear in mind that first point (row) should equal last coordinates (row) in the case of closed polygonal areas.}

\item{...}{Further optional style arguments (see the examples).}
}
\value{
A list with a \code{SpatialLines} object, 
along with optional style arguments like \code{col}, \code{lty}, \code{lwd} etc., 
to be passed to the \code{sp.layout} argument in \code{plotClimatology}
}
\description{
Draws user-defined lines or polygons on top of climatological maps.
}
\details{
The function internally transforms the inputs into \code{\link[sp]{Line}} class objects,
 so the displayed outputs are not actually polygons in a formal sense (they can not be filled, for instance).
 The purpose of the function is just to highlight specific areas within climatological maps (typically rectangular
  windows, but any other shapes like for instance storm tracks can be flexibly specified using \code{coords}).
}
\examples{
data("CFS_Iberia_tas")
# Define a rectangular window centered on the Iberian Peninsula
iberia <- map.lines(lonLim = c(-10,3.5), latLim = c(36,43))
plotClimatology(climatology(CFS_Iberia_tas), backdrop.theme = "coastline",
                sp.layout = list(iberia))

# Some customization options (awful, yes, but just for illustration):
iberia <- map.lines(lonLim = c(-10,3.5), latLim = c(36,44),
                    lwd = 3, # line width
                    col = "purple", # line color
                    lty = 2) # line type
plotClimatology(climatology(CFS_Iberia_tas, by.member = FALSE), backdrop.theme = "coastline",
                sp.layout = list(iberia))

# Another window over the Alps
alps <- map.lines(lonLim = c(4,16), latLim = c(45,49),
                  lwd = 3,
                  col = "red") 
plotClimatology(climatology(CFS_Iberia_tas, by.member = FALSE), backdrop.theme = "coastline",
                sp.layout = list(iberia, alps))

\dontrun{
# Adding a line (real data of a storm-track imported from a csv file)
# Source: http://www.europeanwindstorms.org/

# Requires the target server to be operative...
dat <- url("http://www.europeanwindstorms.org/repository/Jeanette/Jeanette_track.csv")
custom.coords <- read.csv(dat, header = FALSE)[ ,5:4]
storm <- map.lines(coords = custom.coords,
                   lwd = 3,
                   col = "red") 
plotClimatology(climatology(CFS_Iberia_tas, by.member = FALSE), backdrop.theme = "coastline",
                sp.layout = list(storm), # Add storm track
                scales = list(draw = TRUE)) # Add coordinate axes
}
}
\seealso{
\code{\link{plotClimatology}}, to which its output is passed.
 \code{\link{map.stippling}}, for further map customizations.
}
\author{
J Bedia
}
