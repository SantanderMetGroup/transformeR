% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/anomalyGrid.R
\name{anomalyGrid}
\alias{anomalyGrid}
\title{Anomalies}
\usage{
anomalyGrid(grid, parallel = FALSE, max.ncores = 16, ncores = NULL)
}
\arguments{
\item{grid}{Input grid}

\item{parallel}{Logical. Should parallel execution be used?}

\item{max.ncores}{Integer. Upper bound for user-defined number of cores.}

\item{ncores}{Integer number of cores used in parallel computation. Self-selected number of
cores is used when \code{ncpus = NULL} (the default), or when \code{maxcores} exceeds the default \code{ncores} value.}
}
\description{
Recalculates, at the gridbox scale, the grid values in terms of their anomaly w.r.t. the mean
}
\details{
The function computes for each grid point (and member if more than one), the temporal mean.
 Then, this mean is subtracted to each value in the time series. 
 
 An attribute \code{cellfun = anomaly} is added to the \code{$Variable} element of the grid.
}
\section{Parallel Processing}{


Parallel processing is enabled using the \pkg{parallel} package. 
Parallelization is undertaken by a FORK-type parallel socket cluster formed by \code{ncores}.
If \code{ncores} is not specified (default), \code{ncores} will be one less than the autodetected number of cores.
The maximum number of cores used for parallel processing can be set with the \code{max.ncores} argument, 
although this will be reset to the auto-detected number of cores minus 1 if this number is exceeded. Note that not all 
code, but just some critical loops within the function are parallelized.

In practice, parallelization does not always result in smaller execution times, due to the parallel overhead.
However, parallel computing may potentially provide a significant speedup for the 
particular case of large multimember datasets or large grids.
 
Parallel computing is currently not available for Windows machines.
}

