% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/binaryGrid.R
\name{binaryGrid}
\alias{binaryGrid}
\title{Convert grid values to a binary variable}
\usage{
binaryGrid(
  x,
  condition = "GE",
  threshold = NULL,
  partial = FALSE,
  ref.obs = NULL,
  ref.pred = NULL,
  values = c(0, 1),
  simulate = FALSE
)
}
\arguments{
\item{x}{The input grid to be converted to binary. It can be an object or a matrix/array.}

\item{condition}{Inequality operator to be applied considering the given threshold.
\code{"GT"} = greater than the value of \code{threshold}, \code{"GE"} = greater or equal,
\code{"LT"} = lower than, \code{"LE"} = lower or equal than. Values that accomplish the condition turn to 1 whereas the others turn to 0.}

\item{threshold}{An integer. Threshold used as reference for the condition. Default is NULL.}

\item{partial}{A logic value. If TRUE, only values that do not accomplish the condition will turn to 0 and the others will remain with their original grid real value. 
For example, if condition = "GT" and threshold = 1 then every value lower than 1 will turn to 0. Default is FALSE.}

\item{ref.obs}{Grid of observations. It is used to determine the number of days where there is no event (or value equal to 0).}

\item{ref.pred}{Grid of predictions. It is used to calculate the threshold that will further be used to convert to binary the grid x.}

\item{values}{A vector of length 2. For example, values = c(0,1), which is the DEFAULT. Then every sample satisfying the condition is 
equal to the second element of 'values' (i.e., in our example would be equal to 1), whereas if a sample does 
not satisfy the condition then takes the first element (i.e., in our example would be equal to 0).}

\item{simulate}{A logical value. If TRUE then the output is an stochastic sample for given the probability of rain 'p'. 
Therefore only where the input grid 'x' is a grid of probabilities (e.g., for example coming from a logistic regression).}
}
\value{
A new grid object with binary values
}
\description{
Convert a real variable into a binary variable (i.e., 0 or 1) filtering by a threshold.
}
\details{
The function works for regular and irregular grids as downloaded from \pkg{loadeR}).
}
\examples{
\donttest{
require(climate4R.datasets)
data(VALUE_Iberia_pr)
# Take a look at the data:
head(VALUE_Iberia_pr$Data)
# Convert to complete binary variable:
ybin <- binaryGrid(VALUE_Iberia_pr,threshold = 1)
head(ybin$Data)
# Convert to partial binary variable:
ybin2 <- binaryGrid(VALUE_Iberia_pr,threshold = 1, partial = TRUE)
head(ybin2$Data)
# Convert to binary simulating:
dat <- gridArithmetics(ybin,0.5) # to build a dataset with probabilities
ybin3 <- binaryGrid(dat,simulate = TRUE)
head(ybin3$Data)
}
}
\author{
J. Bano-Medina
}
