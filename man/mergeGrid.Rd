% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mergeGrid.R
\name{mergeGrid}
\alias{mergeGrid}
\title{Merge multiple grids in space}
\usage{
mergeGrid(..., aggr.fun = list(FUN = "mean", na.rm = TRUE))
}
\arguments{
\item{...}{Input grids to be merged.}

\item{aggr.fun}{Aggregation function to the intersection areas among grids. The default option computes the mean
aggr.fun = list(FUN = "mean", na.rm = TRUE).}
}
\value{
A single grid result of merging the input grids.
}
\description{
Merge multiple grids in space (latitude and longitude).
}
\details{
\strong{Aggregation function definition}

The aggregation functions are specified in the form of a named list of the type \code{FUN = "function", ...}, where
\code{...} are further arguments passes to FUN. This allows for a flexible definition of aggregation functions, that are 
internally passes to \code{\link{tapply}}. Note that the name of the function is indicated as a character string.
}
\examples{
\donttest{
require(climate4R.datasets)
# We load the dataset (temperature)
data("CFS_Iberia_tas")
# We take a look at the domain of the dataset
library(visualizeR)
spatialPlot(climatology(CFS_Iberia_tas),backdrop.theme = "coastline")
getGrid(CFS_Iberia_tas)
# We divide the dataset in 2 regions
region1 <- subsetGrid(CFS_Iberia_tas,lonLim = c(-10,-6), latLim = c(36,38))
spatialPlot(climatology(region1),backdrop.theme = "coastline")
region2 <- subsetGrid(CFS_Iberia_tas,lonLim = c(-5,3), latLim = c(37,43))
spatialPlot(climatology(region2),backdrop.theme = "coastline")
# We merge the regions and apply the mean function to the intersection
merged <- mergeGrid(region1,region2,aggr.fun = list(FUN = "mean", na.rm = TRUE))
spatialPlot(climatology(merged),backdrop.theme = "coastline")
}
}
\author{
J. BaÃ±o-Medina, M. Iturbide
}
